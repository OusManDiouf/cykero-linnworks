name: cykero-linnworks

services:
  # Production MongoDB
  mongo:
    image: mongo:7.0
    restart: unless-stopped
    ports:
      - "27077:27017"
    # For dev, running without auth is simplest. If you want auth, uncomment env vars and init.
    environment:
      MONGO_INITDB_DATABASE: cykero-linnworks
      #   MONGO_INITDB_ROOT_USERNAME: dev
      #   MONGO_INITDB_ROOT_PASSWORD: devpass
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "63790:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Development application container
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    ports:
      - "4002:4002"
    environment:
      - NODE_ENV=development
      - PORT=4002
      - MONGODB_URI=mongodb://mongo:27017/cykero-linnworks
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    env_file:
      - .env
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      # Mount source code for hot reload
      - .:/app
      # Use named volumes to prevent conflicts
      - node_modules:/app/node_modules
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:'+(process.env.PORT||4002)+'/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    command: pnpm run start:dev
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mongo-data:
  mongo-config:
  mongo-test-data:
  redis-data:
  node_modules:

networks:
  app-network:
    driver: bridge
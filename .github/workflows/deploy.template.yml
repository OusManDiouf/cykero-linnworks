name: Deploy

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          port: ${{ secrets.PROD_PORT }}
          key: ${{ secrets.PROD_SSHKEY }}
          source: "."
          target: "/var/www/html/linnworks.cykero.eu"

      - name: Build and restart on server (pnpm)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          port: ${{ secrets.PROD_PORT }}
          key: ${{ secrets.PROD_SSHKEY }}
          script: |
            set -e
            cd /var/www/html/linnworks.cykero.eu

            # Ensure Node via nvm
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install 22.14.0
            nvm alias default 22.14.0
            nvm use 22.14.0

            # Ensure pnpm via corepack
            corepack enable
            corepack prepare pnpm@latest --activate
            
            # Clean previous outputs to avoid partial builds
            rm -rf dist tsconfig.build.tsbuildinfo
            
            pm2 stop linnworks-app

            # Build and restart
            pnpm install --frozen-lockfile
            pnpm run build
            
            # Verify build artifact
            test -f dist/main.js || { echo "dist/main.js missing â€” build failed"; exit 1; }
            
            # Start/Restart from correct cwd
            pm2 delete linnworks-app || true
            pm2 start ecosystem.config.cjs
            pm2 save